name: Express App Build

run-name: Express App Production Container Build

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: write

jobs:
  update:
    name: Update Express App Containers
    runs-on: ubuntu-latest
    steps:
      - run: echo "Job triggered by a ${{ github.event_name }} event to main."

      - name: Checkout Express App Code
        uses: actions/checkout@v3

      - name: "Increment Express App Version"
        id: updateVersion
        shell: pwsh
        run: |
          $packageJson = Get-Content -Path .\package.json | ConvertFrom-Json
          $packageJsonVer = [System.Version]$packageJson.version
          $newVersion = "{0}.{1}.{2}" -f ($packageJsonVer.Major + 1), $packageJsonVer.Minor, $packageJsonVer.Build
          $packageJson.version = $newVersion
          $packageJson | ConvertTo-Json | Set-Content -Path .\package.json

          Write-Output "ipamVersion=$newVersion" >> $Env:GITHUB_OUTPUT

      - name: "Create Express App ZIP Asset"
        id: createZipAsset
        shell: pwsh
        run: |
          Compress-Archive -Path .\app.js -DestinationPath .\assets\express.zip -Force

      - name: Checkin Updated Express Code
        id: checkinCode
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "expressactions@users.noreply.github.com"
          git commit -a -m "Updated Express App Version"
          git push

      - name: "Publish Express App Release"
        id: publishRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.updateVersion.outputs.ipamVersion }}
          release_name: Release v${{ steps.updateVersion.outputs.ipamVersion }}
          body: |
            Express App Release
          draft: false
          prerelease: false

      - name: Upload Express App Release Asset
        id: uploadReleaseAsset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.publishRelease.outputs.upload_url }}
          asset_path: ./assets/express.zip
          asset_name: express.zip
          asset_content_type: application/zip
