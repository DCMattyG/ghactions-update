name: Express App Build

run-name: Express App Container Build

on:
  release:
    types: [ published ]

permissions:
  id-token: write

jobs:
  init:
    name: Initialize Express App Build
    runs-on: ubuntu-latest
    outputs:
      ipamVersion: ${{ steps.extractVersion.outputs.ipamVersion }}
    steps:
      - run: echo "Job triggered by a ${{ github.event_name }} event."
      - run: echo "Release Tag - ${{ github.event.release.tag_name }}."

      - name: Extract Express App Version
        id: extractVersion
        env:
          releaseTag: ${{ github.event.release.tag_name }}
        shell: pwsh
        run: |
          $version = $env:releaseTag -replace "v", ""
          Write-Output "ipamVersion=$version" >> $Env:GITHUB_OUTPUT

  build:
    name: Build Express App Containers
    runs-on: ubuntu-latest
    needs: [ init ]
    steps:
      - run: echo "Building new containers..."
      - run: echo "New version is ${{ needs.init.outputs.ipamVersion }}"

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Checkout Azure IPAM Code
        uses: actions/checkout@v4

      - name: Build Azure IPAM Containers
        env:
          APP_VERSION: ${{ needs.init.outputs.ipamVersion }}
        run: |
          az acr build -r $ACR_NAME -t app:$APP_VERSION -t app:latest -f ./Dockerfile .

  build-legacy:
    name: Build Legacy Express App Containers
    runs-on: ubuntu-latest
    needs: [ init ]
    steps:
      - run: echo "Building legacy containers..."
      - run: echo "New version is ${{ needs.init.outputs.ipamVersion }}"
